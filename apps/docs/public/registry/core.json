{
  "name": "core",
  "files": [
    {
      "name": "core.ts",
      "content": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs));\n\nexport const colors = {\n\taccent: {\n\t\tjustPrimary: \"bg-transparent text-primary\",\n\t\tprimary: \"bg-primary text-on-primary\",\n\t\tsecondary: \"bg-secondary text-on-secondary\",\n\t\ttertiary: \"bg-tertiary text-on-tertiary\",\n\t\tinversePrimary: \"bg-inverse-primary text-inverse-on-surface\",\n\t},\n\tcontainers: {\n\t\tprimary: \"bg-primary-container text-on-primary-container\",\n\t\tsecondary: \"bg-secondary-container text-on-secondary-container\",\n\t\ttertiary: \"bg-tertiary-container text-on-tertiary-container\",\n\t},\n\tstatus: {\n\t\terror: \"bg-error text-on-error\",\n\t\terrorContainer: \"bg-error-container text-on-error-container\",\n\t},\n\tbackgrounds: {\n\t\tmain: \"bg-background text-on-background\",\n\t\tsurface: \"bg-surface text-on-surface\",\n\t\tsurfaceVariant: \"bg-surface-variant text-on-surface-variant\",\n\t\tinverseSurface: \"bg-inverse-surface text-inverse-on-surface\",\n\t},\n\tsurface: \"bg-surface text-on-surface\",\n\tprimary: \"bg-primary text-on-primary\",\n\ttransparent: \"bg-transparent\",\n\tdisabled: \"disabled:opacity-50 disabled:cursor-not-allowed\",\n\toverlay: \"bg-scrim/80\",\n};\n\nexport const borders = {\n\tstandard: \"border border-outline\",\n\tvariant: \"border border-outline-variant\",\n};\n\nexport const shape = {\n\trounded: \"rounded-default\",\n\troundedWithBorder:\n\t\t\"rounded-default border-[0.0625rem] border-outline-variant\",\n\troundedXsWithBorder: \"rounded-xs border-[0.0625rem] border-outline-variant\",\n\tcircle: \"rounded-full border border-outline-variant\",\n\tcirclePrimary: \"rounded-full border border-primary\",\n};\n\nexport const dimensions = {\n\tsmall: \"size-sm\",\n\tmedium: \"size-md\",\n\tlarge: \"size-lg\",\n\textraLarge: \"size-xl\",\n\tfullWidth: \"w-full\",\n\ticon: \"size-[calc(var(--scale)*var(--base)*0.75)]\",\n};\n\nexport const alignment = {\n\tcenter: \"flex items-center justify-center\",\n\tspaceBetween: \"flex items-center justify-between\",\n\tstart: \"flex items-center justify-start\",\n\tend: \"flex items-center justify-end\",\n};\n\nexport const flexBox = {\n\trow: \"flex flex-row\",\n\tcolumn: \"flex flex-col\",\n\tinlineCenter: \"inline-flex items-center\",\n};\n\nexport const spacing = {\n\tsmall: \"gap-sm\",\n\tmedium: \"gap-md\",\n\tlarge: \"gap-lg\",\n};\n\nexport const padding = {\n\textraSmall: \"p-xs\",\n\tsmall: \"p-sm\",\n\tmedium: \"p-md\",\n\tlarge: \"p-lg\",\n};\n\nexport const paddingX = {\n\textraSmall: \"px-xs\",\n\tsmall: \"px-sm\",\n\tmedium: \"px-md\",\n\tlarge: \"px-lg\",\n};\n\nexport const paddingY = {\n\textraSmall: \"py-xs\",\n\tsmall: \"py-sm\",\n\tmedium: \"py-md\",\n\tlarge: \"py-lg\",\n};\n\nexport const typography = {\n\tsize: {\n\t\textraSmall: \"text-xs\",\n\t\tsmall: \"text-sm\",\n\t\tmedium: \"text-md\",\n\t\tlarge: \"text-lg\",\n\t},\n\tweight: {\n\t\tregular: \"font-normal\",\n\t\tmedium: \"font-medium\",\n\t\tsemibold: \"font-semibold\",\n\t},\n\ttruncate: \"truncate\",\n\tnoWrap: \"whitespace-nowrap\",\n};\n\nexport const shadows = {\n\tdepth: {\n\t\tnone: \"shadow-none\",\n\t\tlow: \"shadow-sm\",\n\t\tmedium: \"shadow-md\",\n\t},\n\tfocusRing: {\n\t\tprimary:\n\t\t\t\"focus:outline-none focus:ring-2 focus:ring-outline-variant focus:ring-offset\",\n\t\tnone: \"focus:outline-none\",\n\t},\n};\n\nexport const interactivity = {\n\tstates: {\n\t\tclickable: \"select-none\",\n\t\thover: \"hover:opacity-70\",\n\t\tactive: \"active:opacity-100\",\n\t\tdisabled: \"disabled:cursor-not-allowed disabled:opacity-50\",\n\t},\n\ttransitions: {\n\t\tdefault: \"duration-200 ease-in-out\",\n\t\topacity: \"transition-opacity\",\n\t\tcolors: \"transition-colors\",\n\t\ttransform: \"transition-transform\",\n\t\tall: \"transition-all\",\n\t},\n\tdataStates: {\n\t\tchecked: \"data-[checked]:bg-primary data-[checked]:text-on-primary\",\n\t\topen: \"data-[state=open]:bg-primary data-[state=open]:text-on-primary\",\n\t\tactive: \"data-[active]:bg-primary data-[active]:text-on-primary\",\n\t\tselected: \"data-[selected]:bg-primary data-[selected]:text-on-primary\",\n\t\tdisabled: \"data-[disabled]:bg-primary data-[disabled]:text-on-primary\",\n\t},\n};\n\nexport const positioning = {\n\tfixed: \"fixed\",\n\trelative: \"relative\",\n\tabsolute: \"absolute\",\n\tinset: {\n\t\tfull: \"inset-0\",\n\t\tcenter: \"left-[50%] top-[50%]\",\n\t},\n\tcorners: {\n\t\ttopRight: \"right-xs top-xs\",\n\t},\n};\n\nexport const transforms = {\n\tcenter: \"translate-x-[-50%] translate-y-[-50%]\",\n};\n\nexport const measurements = {\n\twidth: {\n\t\tfull: \"w-full\",\n\t\tminimum: \"min-w-[8rem]\",\n\t\tmaximum: \"max-w-lg\",\n\t},\n\theight: {\n\t\tfull: \"h-full\",\n\t},\n};\n\nexport const utilities = {\n\toverflow: {\n\t\thidden: \"overflow-hidden\",\n\t},\n\taspectRatio: {\n\t\tsquare: \"aspect-square\",\n\t},\n\tcursor: {\n\t\tdefault: \"cursor-default\",\n\t\tnoEvents: \"pointer-events-none\",\n\t},\n\tobjectFit: {\n\t\tcover: \"object-cover\",\n\t},\n\tflexShrink: {\n\t\tnone: \"shrink-0\",\n\t},\n\tzIndex: {\n\t\tmodal: \"z-50\",\n\t},\n};\n\n// Motion patterns and animations\nexport const motion = {\n\tvariants: {\n\t\tfade: {\n\t\t\tinitial: { opacity: 0 },\n\t\t\tanimate: { opacity: 1 },\n\t\t\texit: { opacity: 0 },\n\t\t},\n\t\tslideUp: {\n\t\t\tinitial: { opacity: 0, y: 20 },\n\t\t\tanimate: { opacity: 1, y: 0 },\n\t\t\texit: { opacity: 0, y: -20 },\n\t\t},\n\t\tslideDown: {\n\t\t\tinitial: { opacity: 0, y: -20 },\n\t\t\tanimate: { opacity: 1, y: 0 },\n\t\t\texit: { opacity: 0, y: 20 },\n\t\t},\n\t\tscale: {\n\t\t\tinitial: { opacity: 0, scale: 0.95 },\n\t\t\tanimate: { opacity: 1, scale: 1 },\n\t\t\texit: { opacity: 0, scale: 0.95 },\n\t\t},\n\t\tspring: {\n\t\t\tinitial: { opacity: 0, y: 30 },\n\t\t\tanimate: {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t\ttransition: {\n\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\tdamping: 20,\n\t\t\t\t\tstiffness: 100,\n\t\t\t\t},\n\t\t\t},\n\t\t\texit: { opacity: 0, y: 30 },\n\t\t},\n\t},\n\ttransitions: {\n\t\tdefault: {\n\t\t\tduration: 0.2,\n\t\t\tease: \"easeInOut\",\n\t\t},\n\t\tfast: {\n\t\t\tduration: 0.15,\n\t\t\tease: \"easeInOut\",\n\t\t},\n\t\tslow: {\n\t\t\tduration: 0.4,\n\t\t\tease: \"easeInOut\",\n\t\t},\n\t\tspring: {\n\t\t\ttype: \"spring\",\n\t\t\tdamping: 20,\n\t\t\tstiffness: 100,\n\t\t},\n\t},\n\thover: {\n\t\tscale: {\n\t\t\tscale: 1.02,\n\t\t\ttransition: { duration: 0.15 },\n\t\t},\n\t\tlift: {\n\t\t\ty: -2,\n\t\t\ttransition: { duration: 0.2 },\n\t\t},\n\t},\n\ttap: {\n\t\tscale: {\n\t\t\tscale: 0.98,\n\t\t\ttransition: { duration: 0.1 },\n\t\t},\n\t},\n};\n"
    }
  ]
}