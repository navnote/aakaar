{
  "name": "core",
  "files": [
    {
      "name": "core.ts",
      "content": "import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport const cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs));\n\nexport const colors = {\n  accent: {\n    justPrimary: 'bg-transparent text-primary',\n    primary: 'bg-primary text-on-primary',\n    secondary: 'bg-secondary text-on-secondary',\n    tertiary: 'bg-tertiary text-on-tertiary',\n    inversePrimary: 'bg-inverse-primary text-inverse-on-surface',\n  },\n  containers: {\n    primary: 'bg-primary-container text-on-primary-container',\n    secondary: 'bg-secondary-container text-on-secondary-container',\n    tertiary: 'bg-tertiary-container text-on-tertiary-container',\n  },\n  status: {\n    error: 'bg-error text-on-error',\n    errorContainer: 'bg-error-container text-on-error-container',\n  },\n  backgrounds: {\n    main: 'bg-background text-on-background',\n    surface: 'bg-surface text-on-surface',\n    surfaceVariant: 'bg-surface-variant text-on-surface-variant',\n    inverseSurface: 'bg-inverse-surface text-inverse-on-surface',\n  },\n  surface: 'bg-surface text-on-surface',\n  primary: 'bg-primary text-on-primary',\n  transparent: 'bg-transparent',\n  disabled: 'disabled:opacity-50 disabled:cursor-not-allowed',\n  overlay: 'bg-scrim/80',\n};\n\nexport const borders = {\n  standard: 'border border-outline',\n  variant: 'border border-outline-variant',\n};\n\nexport const shape = {\n  rounded: 'rounded-default',\n  roundedWithBorder:\n    'rounded-default border-[0.0625rem] border-outline-variant',\n  roundedXsWithBorder: 'rounded-xs border-[0.0625rem] border-outline-variant',\n  circle: 'rounded-full border border-outline-variant',\n  circlePrimary: 'rounded-full border border-primary',\n};\n\nexport const dimensions = {\n  small: 'size-sm',\n  medium: 'size-md',\n  large: 'size-lg',\n  extraLarge: 'size-xl',\n  fullWidth: 'w-full',\n  icon: 'size-[1.2em]',\n};\n\nexport const alignment = {\n  center: 'flex items-center justify-center',\n  spaceBetween: 'flex items-center justify-between',\n  start: 'flex items-center justify-start',\n  end: 'flex items-center justify-end',\n};\n\nexport const flexBox = {\n  row: 'flex flex-row',\n  column: 'flex flex-col',\n  inlineCenter: 'inline-flex items-center',\n};\n\nexport const spacing = {\n  small: 'gap-sm',\n  medium: 'gap-md',\n  large: 'gap-lg',\n};\n\nexport const padding = {\n  extraSmall: 'p-xs',\n  small: 'p-sm',\n  medium: 'p-md',\n  large: 'p-lg',\n};\n\nexport const paddingX = {\n  extraSmall: 'px-xs',\n  small: 'px-sm',\n  medium: 'px-md',\n  large: 'px-lg',\n};\n\nexport const paddingY = {\n  extraSmall: 'py-xs',\n  small: 'py-sm',\n  medium: 'py-md',\n  large: 'py-lg',\n};\n\nexport const typography = {\n  size: {\n    extraSmall: 'text-xs',\n    small: 'text-sm',\n    medium: 'text-md',\n    large: 'text-lg',\n  },\n  weight: {\n    regular: 'font-normal',\n    medium: 'font-medium',\n    semibold: 'font-semibold',\n  },\n  truncate: 'truncate',\n  noWrap: 'whitespace-nowrap',\n};\n\nexport const shadows = {\n  depth: {\n    none: 'shadow-none',\n    low: 'shadow-sm',\n    medium: 'shadow-md',\n  },\n  focusRing: {\n    primary:\n      'focus:outline-none focus:ring-2 focus:ring-outline-variant focus:ring-offset',\n    none: 'focus:outline-none',\n  },\n};\n\nexport const interactivity = {\n  states: {\n    clickable: 'select-none',\n    hover: 'hover:opacity-70',\n    active: 'active:opacity-100',\n    disabled: 'disabled:cursor-not-allowed disabled:opacity-50',\n  },\n  transitions: {\n    default: 'duration-200 ease-in-out',\n    opacity: 'transition-opacity',\n    colors: 'transition-colors',\n    transform: 'transition-transform',\n    all: 'transition-all',\n  },\n  dataStates: {\n    checked:\n      'data-[state=checked]:bg-primary data-[state=checked]:text-on-primary',\n    open: 'data-[state=open]:bg-primary data-[state=open]:text-on-primary',\n    selected: 'data-[selected]:bg-primary data-[selected]:text-on-primary',\n  },\n};\n\nexport const positioning = {\n  fixed: 'fixed',\n  relative: 'relative',\n  absolute: 'absolute',\n  inset: {\n    full: 'inset-0',\n    center: 'left-[50%] top-[50%]',\n  },\n  corners: {\n    topRight: 'right-xs top-xs',\n  },\n};\n\nexport const transforms = {\n  center: 'translate-x-[-50%] translate-y-[-50%]',\n};\n\nexport const measurements = {\n  width: {\n    full: 'w-full',\n    minimum: 'min-w-[8rem]',\n    maximum: 'max-w-lg',\n  },\n  height: {\n    full: 'h-full',\n  },\n};\n\nexport const utilities = {\n  overflow: {\n    hidden: 'overflow-hidden',\n  },\n  aspectRatio: {\n    square: 'aspect-square',\n  },\n  cursor: {\n    default: 'cursor-default',\n    noEvents: 'pointer-events-none',\n  },\n  objectFit: {\n    cover: 'object-cover',\n  },\n  flexShrink: {\n    none: 'shrink-0',\n  },\n  zIndex: {\n    modal: 'z-50',\n  },\n};\n"
    }
  ]
}