{
  "name": "accordion",
  "dependencies": [
    "@base-ui-components/react",
    "@tabler/icons-react"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "import { Accordion as BaseAccordion } from \"@base-ui-components/react\";\nimport { IconChevronDown } from \"@tabler/icons-react\";\nimport * as React from \"react\";\nimport {\n\talignment,\n\tcn,\n\tflexBox,\n\tinteractivity,\n\tpadding,\n\ttypography,\n\tutilities,\n} from \"../../core/core\";\n\nconst accordionStyles = {\n\titem: \"\",\n\ttrigger: cn(\n\t\talignment.spaceBetween,\n\t\tflexBox.inlineCenter,\n\t\tpadding.extraSmall,\n\t\ttypography.weight.medium,\n\t\tinteractivity.transitions.all,\n\t\t\"flex-1 hover:underline [&[data-state=open]>svg]:rotate-180\",\n\t),\n\tcontent: {\n\t\tbase: cn(\n\t\t\tutilities.overflow.hidden,\n\t\t\ttypography.size.small,\n\t\t\tinteractivity.transitions.all,\n\t\t),\n\t\tinner: \"pb-xs pt-0\",\n\t},\n};\n\nconst Accordion = BaseAccordion.Root;\n\nconst AccordionItem = React.forwardRef<\n\tReact.ElementRef<typeof BaseAccordion.Item>,\n\tReact.ComponentPropsWithoutRef<typeof BaseAccordion.Item>\n>(({ className, ...props }, ref) => (\n\t<BaseAccordion.Item\n\t\tref={ref}\n\t\tclassName={cn(accordionStyles.item, className)}\n\t\t{...props}\n\t/>\n));\nAccordionItem.displayName = \"AccordionItem\";\n\nconst AccordionTrigger = React.forwardRef<\n\tReact.ElementRef<typeof BaseAccordion.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof BaseAccordion.Trigger>\n>(({ className, children, ...props }, ref) => (\n\t<BaseAccordion.Header className=\"flex\">\n\t\t<BaseAccordion.Trigger\n\t\t\tref={ref}\n\t\t\tclassName={cn(accordionStyles.trigger, className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<IconChevronDown className=\"size-lg shrink-0 transition-transform duration-200\" />\n\t\t</BaseAccordion.Trigger>\n\t</BaseAccordion.Header>\n));\nAccordionTrigger.displayName = \"AccordionTrigger\";\n\nconst AccordionContent = React.forwardRef<\n\tReact.ElementRef<typeof BaseAccordion.Panel>,\n\tReact.ComponentPropsWithoutRef<typeof BaseAccordion.Panel>\n>(({ className, children, ...props }, ref) => (\n\t<BaseAccordion.Panel\n\t\tref={ref}\n\t\tclassName={cn(accordionStyles.content.base)}\n\t\t{...props}\n\t>\n\t\t<div className={cn(accordionStyles.content.inner, className)}>\n\t\t\t{children}\n\t\t</div>\n\t</BaseAccordion.Panel>\n));\n\nAccordionContent.displayName = \"AccordionContent\";\n\nexport { Accordion, AccordionContent, AccordionItem, AccordionTrigger };\n"
    }
  ]
}