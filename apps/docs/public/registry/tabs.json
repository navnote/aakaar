{
  "name": "tabs",
  "dependencies": [
    "@radix-ui/react-tabs"
  ],
  "files": [
    {
      "name": "tabs.tsx",
      "content": "import * as TabsPrimitive from '@radix-ui/react-tabs';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\nimport {\n  alignment,\n  cn,\n  flexBox,\n  shadows,\n  interactivity,\n  padding,\n  typography,\n  colors,\n  shape,\n} from '../../core/core';\n\nconst tabsStyles = {\n  trigger: cn(\n    'rounded-t-default',\n    alignment.center,\n    typography.noWrap,\n    padding.medium,\n    typography.size.small,\n    interactivity.states.disabled,\n    shadows.depth.low,\n    padding.small,\n    'data-[state=active]:text-tertiary data-[state=active]:font-bold',\n  ),\n  variant: {\n    primary: colors.backgrounds.surfaceVariant,\n    secondary: colors.backgrounds.surface,\n  },\n  list: cn(shape.rounded, flexBox.inlineCenter, colors.surface, 'h-auto'),\n  content: cn(shape.rounded, 'mt-sm'),\n};\nconst tabTriggerVariance = cva(`${tabsStyles.trigger}`, {\n  variants: {\n    variant: {\n      primary: `${tabsStyles.variant.primary}`,\n      secondary: `${tabsStyles.variant.secondary}`,\n    },\n  },\n  defaultVariants: {\n    variant: 'primary',\n  },\n});\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(tabsStyles.list, className)}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> &\n    VariantProps<typeof tabTriggerVariance>\n>(({ className, variant, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(tabTriggerVariance({ variant }), className)}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(tabsStyles.content, className)}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n"
    }
  ]
}