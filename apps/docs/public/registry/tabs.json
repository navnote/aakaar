{
  "name": "tabs",
  "dependencies": [
    "@radix-ui/react-tabs"
  ],
  "files": [
    {
      "name": "tabs.tsx",
      "content": "import * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport {\n\talignment,\n\tcn,\n\tcolors,\n\tflexBox,\n\tinteractivity,\n\tpadding,\n\tshadows,\n\tshape,\n\ttypography,\n} from \"../../core/core\";\n\nconst tabsStyles = {\n\ttrigger: cn(\n\t\t\"rounded-t-default\",\n\t\talignment.center,\n\t\ttypography.noWrap,\n\t\tpadding.medium,\n\t\ttypography.size.small,\n\t\tinteractivity.states.disabled,\n\t\tshadows.depth.low,\n\t\tpadding.small,\n\t\t\"data-[state=active]:text-tertiary data-[state=active]:font-bold\",\n\t),\n\tvariant: {\n\t\tprimary: colors.backgrounds.surfaceVariant,\n\t\tsecondary: colors.backgrounds.surface,\n\t},\n\tlist: cn(shape.rounded, flexBox.inlineCenter, colors.surface, \"h-auto\"),\n\tcontent: cn(shape.rounded, \"mt-sm\"),\n};\nconst tabTriggerVariance = cva(`${tabsStyles.trigger}`, {\n\tvariants: {\n\t\tvariant: {\n\t\t\tprimary: `${tabsStyles.variant.primary}`,\n\t\t\tsecondary: `${tabsStyles.variant.secondary}`,\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: \"primary\",\n\t},\n});\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.List>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n\t<TabsPrimitive.List\n\t\tref={ref}\n\t\tclassName={cn(tabsStyles.list, className)}\n\t\t{...props}\n\t/>\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> &\n\t\tVariantProps<typeof tabTriggerVariance>\n>(({ className, variant, ...props }, ref) => (\n\t<TabsPrimitive.Trigger\n\t\tref={ref}\n\t\tclassName={cn(tabTriggerVariance({ variant }), className)}\n\t\t{...props}\n\t/>\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n\t<TabsPrimitive.Content\n\t\tref={ref}\n\t\tclassName={cn(tabsStyles.content, className)}\n\t\t{...props}\n\t/>\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n"
    }
  ]
}