{
    "name": "slider",
    "dependencies": [
        "@base-ui-components/react"
    ],
    "files": [
        {
            "name": "slider.tsx",
            "content": "import { Slider as BaseSlider } from \"@base-ui-components/react\";\nimport * as React from \"react\";\nimport { cn, interactivity, shape } from \"../../core/core\";\n\nconst sliderStyles = {\n\troot: cn(\"relative flex items-center justify-center w-full\"),\n\ttrack: cn(\n\t\tshape.rounded,\n\t\t\"relative h-2 w-full grow overflow-hidden bg-secondary-container\",\n\t),\n\trange: \"absolute h-full bg-primary\",\n\tthumb: cn(\n\t\t\"block h-5 w-5 rounded-full border-2 border-primary bg-white ring-offset-background\",\n\t\t\"transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n\t\tinteractivity.states.disabled,\n\t\t\"pointer-events-none\",\n\t),\n};\n\nconst Slider = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseSlider.Root>\n>(({ className, ...props }, ref) => (\n\t<BaseSlider.Root\n\t\tref={ref as never}\n\t\tclassName={cn(sliderStyles.root, className)}\n\t\t{...props}\n\t/>\n));\nSlider.displayName = \"Slider\";\n\nconst SliderTrack = React.forwardRef<\n\tReact.ElementRef<typeof BaseSlider.Track>,\n\tReact.ComponentPropsWithoutRef<typeof BaseSlider.Track>\n>(({ className, ...props }, ref) => (\n\t<BaseSlider.Track\n\t\tref={ref as never}\n\t\tclassName={cn(sliderStyles.track, className)}\n\t\t{...props}\n\t/>\n));\nSliderTrack.displayName = \"SliderTrack\";\n\nconst SliderRange = React.forwardRef<\n\tHTMLDivElement,\n\tReact.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\t<BaseSlider.Indicator\n\t\tref={ref as never}\n\t\tclassName={cn(sliderStyles.range, className)}\n\t\t{...props}\n\t/>\n));\nSliderRange.displayName = \"SliderRange\";\n\nconst SliderThumb = React.forwardRef<\n\tReact.ElementRef<typeof BaseSlider.Thumb>,\n\tReact.ComponentPropsWithoutRef<typeof BaseSlider.Thumb>\n>(({ className, ...props }, ref) => (\n\t<BaseSlider.Thumb\n\t\tref={ref}\n\t\tclassName={cn(sliderStyles.thumb, className)}\n\t\t{...props}\n\t/>\n));\nSliderThumb.displayName = \"SliderThumb\";\n\nconst SliderControl = React.forwardRef<\n\tReact.ElementRef<typeof BaseSlider.Control>,\n\tReact.ComponentPropsWithoutRef<typeof BaseSlider.Control>\n>(({ className, ...props }, ref) => (\n\t<BaseSlider.Control\n\t\tref={ref}\n\t\tclassName={className}\n\t\t{...props}\n\t/>\n));\nSliderControl.displayName = \"SliderControl\";\n\nexport { Slider, SliderControl, SliderRange, SliderThumb, SliderTrack };\n"
        }
    ]
}