{
  "name": "dialog",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "import { Dialog as BaseDialog } from \"@base-ui-components/react\";\nimport { IconX } from \"@tabler/icons-react\";\nimport * as React from \"react\";\nimport {\n\talignment,\n\tcn,\n\tcolors,\n\tdimensions,\n\tflexBox,\n\tinteractivity,\n\tpadding,\n\tpositioning,\n\tshadows,\n\tshape,\n\tspacing,\n\ttransforms,\n\ttypography,\n\tutilities,\n} from \"../../core/core\";\n\nconst dialogStyles = {\n\toverlay: cn(\n\t\tcolors.overlay,\n\t\talignment.center,\n\t\tpositioning.fixed,\n\t\tpositioning.inset.full,\n\t\tutilities.zIndex.modal,\n\t\tinteractivity.transitions.opacity,\n\t),\n\tcontent: cn(\n\t\tshape.roundedWithBorder,\n\t\tcolors.surface,\n\t\tflexBox.column,\n\t\tspacing.medium,\n\t\tpadding.medium,\n\t\tshadows.depth.medium,\n\t\tpositioning.fixed,\n\t\tpositioning.inset.center,\n\t\ttransforms.center,\n\t\tutilities.zIndex.modal,\n\t\tinteractivity.transitions.all,\n\t),\n\tclose: cn(\n\t\tpositioning.absolute,\n\t\tpositioning.corners.topRight,\n\t\tshape.roundedWithBorder,\n\t\tinteractivity.transitions.opacity,\n\t\tinteractivity.states.clickable,\n\t\tinteractivity.states.disabled,\n\t\tinteractivity.dataStates.open,\n\t\tinteractivity.dataStates.checked,\n\t\tinteractivity.dataStates.selected,\n\t),\n\theader: cn(flexBox.column, spacing.medium, \"text-center sm:text-left\"),\n\tfooter: \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-xs\",\n\ttitle: cn(typography.weight.semibold, \"text-lg leading-none tracking-tight\"),\n\tdescription: cn(typography.size.small, colors.surface),\n\tcloseIcon: cn(dimensions.medium),\n};\n\nconst Dialog = BaseDialog.Root;\n\nconst DialogTrigger = BaseDialog.Trigger;\n\nconst DialogPortal = BaseDialog.Portal;\n\nconst DialogClose = BaseDialog.Close;\n\nconst DialogOverlay = React.forwardRef<\n\tReact.ElementRef<typeof BaseDialog.Backdrop>,\n\tReact.ComponentPropsWithoutRef<typeof BaseDialog.Backdrop>\n>(({ className, ...props }, ref) => (\n\t<BaseDialog.Backdrop\n\t\tref={ref}\n\t\tclassName={cn(dialogStyles.overlay, className)}\n\t\t{...props}\n\t/>\n));\nDialogOverlay.displayName = \"DialogOverlay\";\n\nconst DialogContent = React.forwardRef<\n\tReact.ElementRef<typeof BaseDialog.Popup>,\n\tReact.ComponentPropsWithoutRef<typeof BaseDialog.Popup>\n>(({ className, children, ...props }, ref) => (\n\t<DialogPortal>\n\t\t<DialogOverlay />\n\t\t<BaseDialog.Popup\n\t\t\tref={ref}\n\t\t\tclassName={cn(dialogStyles.content, className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<DialogClose className={dialogStyles.close}>\n\t\t\t\t<IconX className={dialogStyles.closeIcon} />\n\t\t\t\t<span className=\"sr-only\">Close</span>\n\t\t\t</DialogClose>\n\t\t</BaseDialog.Popup>\n\t</DialogPortal>\n));\nDialogContent.displayName = \"DialogContent\";\n\nconst DialogHeader = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div className={cn(dialogStyles.header, className)} {...props} />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div className={cn(dialogStyles.footer, className)} {...props} />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n\tReact.ElementRef<typeof BaseDialog.Title>,\n\tReact.ComponentPropsWithoutRef<typeof BaseDialog.Title>\n>(({ className, ...props }, ref) => (\n\t<BaseDialog.Title\n\t\tref={ref}\n\t\tclassName={cn(dialogStyles.title, className)}\n\t\t{...props}\n\t/>\n));\nDialogTitle.displayName = \"DialogTitle\";\n\nconst DialogDescription = React.forwardRef<\n\tReact.ElementRef<typeof BaseDialog.Description>,\n\tReact.ComponentPropsWithoutRef<typeof BaseDialog.Description>\n>(({ className, ...props }, ref) => (\n\t<BaseDialog.Description\n\t\tref={ref}\n\t\tclassName={cn(dialogStyles.description, className)}\n\t\t{...props}\n\t/>\n));\nDialogDescription.displayName = \"DialogDescription\";\n\nexport {\n\tDialog,\n\tDialogClose,\n\tDialogContent,\n\tDialogDescription,\n\tDialogFooter,\n\tDialogHeader,\n\tDialogOverlay,\n\tDialogPortal,\n\tDialogTitle,\n\tDialogTrigger,\n};\n"
    }
  ]
}