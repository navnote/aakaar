{
  "name": "menu",
  "dependencies": [
    "@base-ui-components/react",
    "@tabler/icons-react"
  ],
  "files": [
    {
      "name": "menu.tsx",
      "content": "import { Menu as BaseMenu } from \"@base-ui-components/react\";\nimport { IconCheck } from \"@tabler/icons-react\";\nimport * as React from \"react\";\nimport {\n\talignment,\n\tcn,\n\tcolors,\n\tdimensions,\n\tinteractivity,\n\tmeasurements,\n\tpadding,\n\tpaddingX,\n\tpaddingY,\n\tpositioning,\n\tshadows,\n\tshape,\n\ttypography,\n\tutilities,\n} from \"../../core/core\";\n\nconst menuStyles = {\n\tcontent: cn(\n\t\tshape.roundedWithBorder,\n\t\tcolors.surface,\n\t\tpositioning.relative,\n\t\tutilities.zIndex.modal,\n\t\tutilities.overflow.hidden,\n\t\tshadows.depth.low,\n\t\tmeasurements.height.full,\n\t\t\"max-h-[15rem] overflow-y-auto\",\n\t),\n\titem: cn(\n\t\tshape.rounded,\n\t\talignment.start,\n\t\tpadding.small,\n\t\ttypography.size.small,\n\t\tinteractivity.states.clickable,\n\t\tinteractivity.dataStates.selected,\n\t\tinteractivity.states.hover,\n\t\tmeasurements.width.full,\n\t\tpaddingX.large,\n\t\tpositioning.relative,\n\t),\n\tlabel: cn(\n\t\tpaddingY.small,\n\t\tpaddingX.medium,\n\t\ttypography.size.small,\n\t\ttypography.weight.semibold,\n\t),\n\ticon: dimensions.icon,\n\tseparator: cn(\"h-px\", colors.surface),\n\tshortcut: \"ml-auto text-xs tracking-widest opacity-60\",\n};\n\nconst Menu = BaseMenu.Root;\nconst MenuTrigger = BaseMenu.Trigger;\nconst MenuGroup = BaseMenu.Group;\nconst MenuGroupLabel = BaseMenu.GroupLabel;\n\nconst MenuContent = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.Popup>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.Popup>\n>(({ className, ...props }, ref) => (\n\t<BaseMenu.Portal>\n\t\t<BaseMenu.Positioner>\n\t\t\t<BaseMenu.Popup\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(menuStyles.content, className)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</BaseMenu.Positioner>\n\t</BaseMenu.Portal>\n));\nMenuContent.displayName = \"MenuContent\";\n\nconst MenuItem = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.Item>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.Item> & {\n\t\tinset?: boolean;\n\t}\n>(({ className, inset, ...props }, ref) => (\n\t<BaseMenu.Item\n\t\tref={ref}\n\t\tclassName={cn(menuStyles.item, inset && \"pl-lg\", className)}\n\t\t{...props}\n\t/>\n));\nMenuItem.displayName = \"MenuItem\";\n\nconst MenuLabel = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.GroupLabel>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.GroupLabel>\n>(({ className, ...props }, ref) => (\n\t<BaseMenu.GroupLabel\n\t\tref={ref}\n\t\tclassName={cn(menuStyles.label, className)}\n\t\t{...props}\n\t/>\n));\nMenuLabel.displayName = \"MenuLabel\";\n\nconst MenuSeparator = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.Separator>\n>(({ className, ...props }, ref) => (\n\t<BaseMenu.Separator\n\t\tref={ref}\n\t\tclassName={cn(menuStyles.separator, className)}\n\t\t{...props}\n\t/>\n));\nMenuSeparator.displayName = \"MenuSeparator\";\n\nconst MenuCheckboxItem = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.CheckboxItem>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n\t<BaseMenu.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(menuStyles.item, className)}\n\t\tchecked={checked}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<BaseMenu.CheckboxItemIndicator className=\"ml-auto\">\n\t\t\t<IconCheck className={menuStyles.icon} />\n\t\t</BaseMenu.CheckboxItemIndicator>\n\t</BaseMenu.CheckboxItem>\n));\nMenuCheckboxItem.displayName = \"MenuCheckboxItem\";\n\nconst MenuRadioGroup = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.RadioGroup>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.RadioGroup>\n>(({ className, ...props }, ref) => (\n\t<BaseMenu.RadioGroup\n\t\tref={ref}\n\t\tclassName={cn(\"p-xs\", className)}\n\t\t{...props}\n\t/>\n));\nMenuRadioGroup.displayName = \"MenuRadioGroup\";\n\nconst MenuRadioItem = React.forwardRef<\n\tReact.ElementRef<typeof BaseMenu.RadioItem>,\n\tReact.ComponentPropsWithoutRef<typeof BaseMenu.RadioItem>\n>(({ className, children, ...props }, ref) => (\n\t<BaseMenu.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(menuStyles.item, className)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<BaseMenu.RadioItemIndicator className=\"ml-auto\">\n\t\t\t<IconCheck className={menuStyles.icon} />\n\t\t</BaseMenu.RadioItemIndicator>\n\t</BaseMenu.RadioItem>\n));\nMenuRadioItem.displayName = \"MenuRadioItem\";\n\nconst MenuShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n\treturn <span className={cn(menuStyles.shortcut, className)} {...props} />;\n};\nMenuShortcut.displayName = \"MenuShortcut\";\n\nexport {\n\tMenu,\n\tMenuCheckboxItem,\n\tMenuContent,\n\tMenuGroup,\n\tMenuGroupLabel,\n\tMenuItem,\n\tMenuLabel,\n\tMenuRadioGroup,\n\tMenuRadioItem,\n\tMenuSeparator,\n\tMenuShortcut,\n\tMenuTrigger,\n};\n"
    }
  ]
}

