{
  "name": "toast",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "name": "toast.tsx",
      "content": "import { Toast as BaseToast } from \"@base-ui-components/react\";\nimport * as React from \"react\";\nimport {\n\tborders,\n\tcn,\n\tcolors,\n\tpadding,\n\tpositioning,\n\tshadows,\n\tshape,\n\ttypography,\n} from \"../../core/core\";\n\nconst toastStyles = {\n\troot: cn(\n\t\tpositioning.absolute,\n\t\t\"w-full max-w-full\",\n\t\tshape.rounded,\n\t\tborders.variant,\n\t\tcolors.surface,\n\t\tpadding.small,\n\t\tshadows.depth.medium,\n\t\t\"select-none cursor-default\",\n\t\t\"origin-bottom-center\",\n\t\t\"transition-[transform,opacity,height] duration-500\",\n\t\t\"z-[calc(1000-var(--toast-index))]\",\n\t\t\"h-[var(--toast-frontmost-height,var(--toast-height))]\",\n\t\t// Transform for stacking animation\n\t\t\"translate-x-[var(--toast-swipe-movement-x)]\",\n\t\t\"translate-y-[calc(var(--toast-swipe-movement-y)-(var(--toast-index)*0.75rem))]\",\n\t\t// Expanded state\n\t\t\"[&[data-expanded]]:translate-y-[calc(var(--toast-offset-y)*-1+(var(--toast-index)*-0.75rem)+var(--toast-swipe-movement-y))]\",\n\t\t\"[&[data-expanded]]:h-[var(--toast-height)]\",\n\t\t// Animation states\n\t\t\"[&[data-starting-style],[&[data-ending-style]]:translate-y-[150%]\",\n\t\t\"[&[data-limited]]:opacity-0\",\n\t\t\"[&[data-ending-style]]:opacity-0\",\n\t\t// Swipe directions\n\t\t\"[&[data-ending-style][data-swipe-direction=up]]:translate-y-[calc(var(--toast-swipe-movement-y)-150%)]\",\n\t\t\"[&[data-ending-style][data-swipe-direction=down]]:translate-y-[calc(var(--toast-swipe-movement-y)+150%)]\",\n\t\t\"[&[data-ending-style][data-swipe-direction=left]]:translate-x-[calc(var(--toast-swipe-movement-x)-150%)]\",\n\t\t\"[&[data-ending-style][data-swipe-direction=right]]:translate-x-[calc(var(--toast-swipe-movement-x)+150%)]\",\n\t),\n\tviewport: cn(\n\t\tpositioning.fixed,\n\t\t\"bottom-[12rem] right-md w-[250px] z-[1] md:bottom-[12rem] md:right-lg md:w-[300px]\",\n\t),\n\ttitle: cn(typography.size.small, \"font-medium !m-0 !pt-0\"),\n\tdescription: cn(typography.size.extraSmall, \"m-none\"),\n\tclose: cn(\n\t\tpositioning.absolute,\n\t\t\"top-sm right-sm size-xs rounded p-0 border-0 bg-transparent\",\n\t\t\"flex items-center justify-center\",\n\t\t\"hover:bg-secondary-container\",\n\t),\n};\n\nconst ToastProvider = BaseToast.Provider;\n\nconst ToastViewport = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Viewport>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Viewport\n\t\tref={ref}\n\t\tclassName={cn(toastStyles.viewport, className)}\n\t\t{...props}\n\t/>\n));\nToastViewport.displayName = \"ToastViewport\";\n\nconst ToastPortal = BaseToast.Portal;\n\nconst Toast = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Root>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Root\n\t\tref={ref}\n\t\tclassName={cn(toastStyles.root, className)}\n\t\t{...props}\n\t/>\n));\nToast.displayName = \"Toast\";\n\nconst ToastTitle = React.forwardRef<\n\tHTMLParagraphElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Title>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Title\n\t\tref={ref}\n\t\tclassName={cn(toastStyles.title, className)}\n\t\t{...props}\n\t/>\n));\nToastTitle.displayName = \"ToastTitle\";\n\nconst ToastDescription = React.forwardRef<\n\tHTMLParagraphElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Description>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Description\n\t\tref={ref}\n\t\tclassName={cn(toastStyles.description, className)}\n\t\t{...props}\n\t/>\n));\nToastDescription.displayName = \"ToastDescription\";\n\nconst ToastClose = React.forwardRef<\n\tHTMLButtonElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Close>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Close\n\t\tref={ref}\n\t\tclassName={cn(toastStyles.close, className)}\n\t\t{...props}\n\t/>\n));\nToastClose.displayName = \"ToastClose\";\n\nconst ToastAction = React.forwardRef<\n\tHTMLButtonElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseToast.Action>\n>(({ className, ...props }, ref) => (\n\t<BaseToast.Action\n\t\tref={ref}\n\t\tclassName={cn(padding.small, typography.size.small, className)}\n\t\t{...props}\n\t/>\n));\nToastAction.displayName = \"ToastAction\";\n\nexport {\n\tToast,\n\tToastAction,\n\tToastClose,\n\tToastDescription,\n\tToastPortal,\n\tToastProvider,\n\tToastTitle,\n\tToastViewport,\n};\n\n// Import the base Toast namespace to access useToastManager\nimport { Toast as BaseToastNS } from \"@base-ui-components/react\";\nconst ToastWithManager = {\n\tProvider: ToastProvider,\n\tViewport: ToastViewport,\n\tPortal: ToastPortal,\n\tRoot: Toast,\n\tTitle: ToastTitle,\n\tDescription: ToastDescription,\n\tClose: ToastClose,\n\tAction: ToastAction,\n\tuseToastManager: BaseToastNS.useToastManager,\n};\nexport { ToastWithManager as default };\n"
    }
  ]
}