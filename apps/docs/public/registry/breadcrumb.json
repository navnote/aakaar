{
  "name": "breadcrumb",
  "dependencies": [
    "@base-ui-components/react",
    "@tabler/icons-react"
  ],
  "files": [
    {
      "name": "breadcrumb.tsx",
      "content": "import { mergeProps } from \"@base-ui-components/react\";\nimport { IconChevronRight, IconDots } from \"@tabler/icons-react\";\nimport * as React from \"react\";\nimport {\n\talignment,\n\tcn,\n\tflexBox,\n\tinteractivity,\n\ttypography,\n} from \"../../core/core\";\n\nconst breadcrumbStyles = {\n\tnav: \"\",\n\tlist: cn(\n\t\tflexBox.row,\n\t\talignment.center,\n\t\ttypography.size.small,\n\t\t\"flex-wrap gap-xs break-words text-on-background sm:gap-md list-none\",\n\t),\n\titem: cn(flexBox.inlineCenter, \"gap-xs\"),\n\tlink: cn(interactivity.transitions.colors, \"hover:text-primary\"),\n\tpage: cn(typography.weight.regular, \"text-primary\"),\n\tseparator: \"[&>svg]:size-md\",\n\tellipsis: cn(alignment.center, \"size-md\"),\n};\nconst Breadcrumb = React.forwardRef<\n\tHTMLElement,\n\tReact.HTMLAttributes<HTMLElement>\n>(({ ...props }, ref) => (\n\t<nav\n\t\tref={ref}\n\t\taria-label=\"breadcrumb\"\n\t\tclassName={breadcrumbStyles.nav}\n\t\t{...props}\n\t/>\n));\nBreadcrumb.displayName = \"Breadcrumb\";\n\nconst BreadcrumbList = React.forwardRef<\n\tHTMLOListElement,\n\tReact.OlHTMLAttributes<HTMLOListElement>\n>(({ className, ...props }, ref) => (\n\t<ol ref={ref} className={cn(breadcrumbStyles.list, className)} {...props} />\n));\nBreadcrumbList.displayName = \"BreadcrumbList\";\n\nconst BreadcrumbItem = React.forwardRef<\n\tHTMLLIElement,\n\tReact.LiHTMLAttributes<HTMLLIElement>\n>(({ className, ...props }, ref) => (\n\t<li ref={ref} className={cn(breadcrumbStyles.item, className)} {...props} />\n));\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nconst BreadcrumbLink = React.forwardRef<\n\tHTMLAnchorElement,\n\tReact.ComponentPropsWithoutRef<\"a\"> & {\n\t\tasChild?: boolean;\n\t}\n>(({ asChild, className, ...props }, ref) => {\n\tconst Comp = asChild ? \"span\" : \"a\";\n\tconst mergedProps = asChild\n\t\t? mergeProps(props, { role: \"link\", tabIndex: 0 })\n\t\t: props;\n\n\treturn (\n\t\t<Comp\n\t\t\tref={ref}\n\t\t\tclassName={cn(breadcrumbStyles.link, className)}\n\t\t\t{...mergedProps}\n\t\t/>\n\t);\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nconst BreadcrumbPage = React.forwardRef<\n\tHTMLSpanElement,\n\tReact.HTMLAttributes<HTMLSpanElement>\n>(({ className, ...props }, ref) => (\n\t<span\n\t\tref={ref}\n\t\trole=\"link\"\n\t\taria-current=\"page\"\n\t\tclassName={cn(breadcrumbStyles.page, className)}\n\t\t{...props}\n\t/>\n));\nBreadcrumbPage.displayName = \"BreadcrumbPage\";\n\nconst BreadcrumbSeparator = ({\n\tchildren,\n\tclassName,\n\t...props\n}: React.ComponentProps<\"li\">) => (\n\t<li\n\t\trole=\"presentation\"\n\t\taria-hidden=\"true\"\n\t\tclassName={cn(breadcrumbStyles.separator, className)}\n\t\t{...props}\n\t>\n\t\t{children ?? <IconChevronRight />}\n\t</li>\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nconst BreadcrumbEllipsis = ({\n\tclassName,\n\t...props\n}: React.ComponentProps<\"span\">) => (\n\t<span\n\t\trole=\"presentation\"\n\t\taria-hidden=\"true\"\n\t\tclassName={cn(breadcrumbStyles.ellipsis, className)}\n\t\t{...props}\n\t>\n\t\t<IconDots className=\"size-md\" />\n\t\t<span className=\"sr-only\">More</span>\n\t</span>\n);\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\";\n\nexport {\n\tBreadcrumb,\n\tBreadcrumbEllipsis,\n\tBreadcrumbItem,\n\tBreadcrumbLink,\n\tBreadcrumbList,\n\tBreadcrumbPage,\n\tBreadcrumbSeparator,\n};\n"
    }
  ]
}